由内核分配给任务的内存才会在任务被删除后自动释放掉，用户分配给任务的内存需要由用户自行释放掉，比如用户申请的内存，必须要自己释放。

如果使用静态方法建立任务，用户必须实现vApplicationGetIdleTaskMemory()和vApplicationGetTimerTaskMemory()两个函数，用来
给空闲任务和定时器任务的任务堆栈、任务控制块分配内存。

任务函数一般不允许跳出循环,如果一定要跳出循环的话在跳出循环以后一定要调用函数 vTaskDelete(NULL)删除此任务!

空闲任务：系统中其他任务由于各种原因不能运行的时候，空闲任务就在运行。空闲任务是FreeRTOS自动创建的，不需要用户手动创建。除此之外，还会做其他的事情：
1)判断系统中是否有任务删除自己，如果有，释放被删除任务的任务堆栈和任务控制块的内存
2)运行用户设置的空闲任务钩子函数
3)开启低功耗模式
空闲任务的优先级是最低的，为0.

当执行延时函数的时候就会进行任务切换,并且此任务就会进入阻塞态,直到延时完成,任务重新进入就绪态。

在 FreeRTOS 中延时函数也有相对模式和绝对模式,不过在 FreeRTOS 中不同的模式用的函数不同,其中函数 vTaskDelay()是相对模式(相对延时函数),
函数 vTaskDelayUntil()是绝对模式(绝对延时函数)。
函数 vTaskDelay()在文件 tasks.c 中有定义,要使用此函数的话宏 INCLUDE_vTaskDelay 必须为 1